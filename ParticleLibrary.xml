<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ParticleLibrary</name>
    </assembly>
    <members>
        <member name="T:ParticleLibrary.EmitterSystem.Emitter">
            <summary>
            Base class for all emitters. Inherit this class to create your own emitter.
            </summary>
        </member>
        <member name="F:ParticleLibrary.EmitterSystem.Emitter.Assembly">
            <summary>
            Originating mod.
            </summary>
        </member>
        <member name="F:ParticleLibrary.EmitterSystem.Emitter.Type">
            <summary>
            Originating type.
            </summary>
        </member>
        <member name="F:ParticleLibrary.EmitterSystem.Emitter.Data">
            <summary>
            Custom string Data for this emitter.
            </summary>
        </member>
        <member name="F:ParticleLibrary.EmitterSystem.Emitter.Save">
            <summary>
            Whether this emitter should save when the world is exited.
            </summary>
        </member>
        <member name="F:ParticleLibrary.EmitterSystem.Emitter.CullDistance">
            <summary>
            Minumum distance before AI is run. Measured by distance from Main.localPlayer to Emitter.
            </summary>
        </member>
        <member name="M:ParticleLibrary.EmitterSystem.Emitter.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:ParticleLibrary.EmitterSystem.Emitter.SetDefaults">
            <summary>
            Runs on instantiation.
            </summary>
        </member>
        <member name="M:ParticleLibrary.EmitterSystem.Emitter.AI">
            <summary>
            Runs on PreUpdateWorld.
            </summary>
        </member>
        <member name="M:ParticleLibrary.EmitterSystem.Emitter.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Runs on DrawDust.
            </summary>
        </member>
        <member name="M:ParticleLibrary.EmitterSystem.Emitter.Kill">
            <summary>
            Kills this emitter.
            </summary>
        </member>
        <member name="F:ParticleLibrary.EmitterManager.emitters">
            <summary>
            List of emitters.
            </summary>
        </member>
        <member name="M:ParticleLibrary.EmitterManager.NewInstance``1">
            <summary>
            Creates a new instance of an emitter Type.
            </summary>
            <typeparam name="T">The emitter.</typeparam>
            <returns>A new instance of this emitter</returns>
        </member>
        <member name="M:ParticleLibrary.EmitterManager.NewEmitter``1(Microsoft.Xna.Framework.Vector2,System.String,System.Single)">
            <summary>
            Spawns a new emitter at the desired position.
            </summary>
            <typeparam name="T">The emitter.</typeparam>
            <param name="Position">The emitter's position.</param>
            <param name="Data">Custom string data.</param>
            <param name="CullDistance">The maximum distance before the emitter no longer runs.</param>
        </member>
        <member name="M:ParticleLibrary.EmitterManager.NewEmitter(Microsoft.Xna.Framework.Vector2,ParticleLibrary.EmitterSystem.Emitter,System.String,System.Single)">
            <summary>
            Spawns a new emitter at the desired position.
            </summary>
            <param name="Position">The emitter's position.</param>
            <param name="Emitter">The emitter type.</param>
            <param name="Data">Defaults to "ModName: EmitterName". If the mod can't be found by the Assembly name, then defaults to "AssemblyName: EmitterName".</param>
            <param name="CullDistance">Defaults to the largest screen dimension.</param>
        </member>
        <member name="M:ParticleLibrary.EmitterManager.Remove(ParticleLibrary.EmitterSystem.Emitter)">
            Search Utilities
            <summary>
            Kills a specified emitter.
            </summary>
            <param name="emitter"></param>
        </member>
        <member name="M:ParticleLibrary.EmitterManager.Remove(System.String)">
            <summary>
            Kills all emitters with matching data.
            </summary>
            <param name="Data"></param>
        </member>
        <member name="M:ParticleLibrary.EmitterManager.Remove(System.Predicate{ParticleLibrary.EmitterSystem.Emitter})">
            <summary>
            Kills all emitters that fulfill the conditions.
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="M:ParticleLibrary.EmitterManager.Find(System.String)">
            <summary>
            Returns an emitter with matching data.
            </summary>
            <param name="Data"></param>
        </member>
        <member name="M:ParticleLibrary.EmitterManager.Find(System.Predicate{ParticleLibrary.EmitterSystem.Emitter})">
            <summary>
            Returns all emitters that fulfill the conditions.
            </summary>
            <param name="predicate"></param>
        </member>
        <member name="F:ParticleLibrary.ParticleLibrary.EmptyPixel">
            <summary>
            Empty 1x1 texture
            </summary>
        </member>
        <member name="T:ParticleLibrary.Particle">
            <summary>
            Base class for all particles. Inherit this class to create your own particle.
            </summary>
        </member>
        <member name="M:ParticleLibrary.Particle.#ctor">
            <summary>
            </summary>
        </member>
        <member name="P:ParticleLibrary.Particle.Texture">
            <summary>
            Texture path for a particle. Override this to specify a custom path.
            </summary>
        </member>
        <member name="P:ParticleLibrary.Particle.VisualPosition">
            <summary>
            The visual position taking into account Main.screenPosition;
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.color">
            <summary>
            The color of this particle.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.frame">
            <summary>
            The frame of this particle.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.texture">
            <summary>
            The texture for this particle.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.SpawnAction">
            <summary>
            Method to run when this particle is spawned.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.DeathAction">
            <summary>
            Method to run when this particle is despawned.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.tileCollide">
            <summary>
            Whether this particle should collide with tiles.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.scale">
            <summary>
            The scale of this particle.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.rotation">
            <summary>
            The rotation of this particle.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.opacity">
            <summary>
            The opacity of this particle.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.gravity">
            <summary>
            The gravity to apply to this particle's movement.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.timeLeft">
            <summary>
            The amount of ticks (frames) this particle has left in its lifetime.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.ai">
            <summary>
            An array of floats used to pass data to the particle on spawn.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.oldPos">
            <summary>
            An array of old positions for this particle. Only used when instantiated.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.oldRot">
            <summary>
            An array of old rotations for this particle. Only used when instantiated.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.oldCen">
            <summary>
            An array of old centers, taking into account the width and height of this particle. Only used when instantiated.
            </summary>
        </member>
        <member name="F:ParticleLibrary.Particle.oldVel">
            <summary>
            An array of old velocities for this particle. Only used when instantiated.
            </summary>
        </member>
        <member name="M:ParticleLibrary.Particle.SetDefaults">
            <summary>
            </summary>
        </member>
        <member name="M:ParticleLibrary.Particle.PreAI">
            <summary>
            This method runs before the particle is updated.
            </summary>
        </member>
        <member name="M:ParticleLibrary.Particle.AI">
            <summary>
            This method runs as the particle is updated.
            </summary>
        </member>
        <member name="M:ParticleLibrary.Particle.PostAI">
            <summary>
            This method runs after the particle is updated.
            </summary>
        </member>
        <member name="M:ParticleLibrary.Particle.PreDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            This method runs before Draw. Return false to keep the Particle Manager from drawing your particle.
            </summary>
            <param name="spriteBatch">Provided SpriteBatch.</param>
            <param name="drawPos">Draw position of the particle. This factors in Main.screenPosition.</param>
            <param name="lightColor">The light color of the tile beneath this particle.</param>
            <returns>bool</returns>
        </member>
        <member name="M:ParticleLibrary.Particle.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            This method runs if PreDraw returns true.
            </summary>
        </member>
        <member name="M:ParticleLibrary.Particle.PostDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            This method runs after Draw is called.
            <param name="spriteBatch">Provided SpriteBatch.</param>
            <param name="drawPos">Draw position of the particle. This factors in Main.screenPosition.</param>
            <param name="lightColor">The light color of the tile beneath this particle.</param>
            </summary>
        </member>
        <member name="M:ParticleLibrary.Particle.TileCollision(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Runs when the particle collides with a tile.
            </summary>
            <param name="oldVelocity">The old velocity of the particle.</param>
        </member>
        <member name="M:ParticleLibrary.Particle.Kill(System.Boolean)">
            <summary>
            Kills a particle.
            </summary>
        </member>
        <member name="T:ParticleLibrary.ParticleManager">
            <summary>
            This class manages the particle system.
            </summary>
        </member>
        <member name="F:ParticleLibrary.ParticleManager.particles">
            <summary>
            A list that contains all active particles.
            </summary>
        </member>
        <member name="M:ParticleLibrary.ParticleManager.OnModLoad">
            <summary>
            </summary>
        </member>
        <member name="M:ParticleLibrary.ParticleManager.Unload">
            <summary>
            </summary>
        </member>
        <member name="M:ParticleLibrary.ParticleManager.OnWorldLoad">
            <summary>
            </summary>
        </member>
        <member name="M:ParticleLibrary.ParticleManager.OnWorldUnload">
            <summary>
            </summary>
        </member>
        <member name="M:ParticleLibrary.ParticleManager.Dispose">
            <summary>
            Disposes the current list of particles.
            </summary>
        </member>
        <member name="M:ParticleLibrary.ParticleManager.NewInstance``1">
            <summary>
            Creates a new instance of a particle Type.
            </summary>
            <typeparam name="T">The particle.</typeparam>
            <returns>A new instance of this particle</returns>
        </member>
        <member name="M:ParticleLibrary.ParticleManager.NewParticle``1(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Spawns a new particle at the desired position.
            </summary>
            <typeparam name="T">The particle.</typeparam>
            <param name="Position">The particle's position.</param>
            <param name="Velocity">The particle's velocity.</param>
            <param name="Color">The particle's color.</param>
            <param name="Scale">The particle's size.</param>
            <param name="AI0">Value to pass to the particle's AI array.</param>
            <param name="AI1"></param>
            <param name="AI2"></param>
            <param name="AI3"></param>
            <param name="AI4"></param>
            <param name="AI5"></param>
            <param name="AI6"></param>
            <param name="AI7"></param>
        </member>
        <member name="M:ParticleLibrary.ParticleManager.NewParticle(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,ParticleLibrary.Particle,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Spawns a new particle at the desired position.
            </summary>
            <param name="Position">The particle's position.</param>
            <param name="Velocity">The particle's velocity.</param>
            <param name="Particle">The particle type.</param>
            <param name="Color">The particle's color.</param>
            <param name="Scale">The particle's size.</param>
            <param name="AI0">Value to pass to the particle's AI array.</param>
            <param name="AI1"></param>
            <param name="AI2"></param>
            <param name="AI3"></param>
            <param name="AI4"></param>
            <param name="AI5"></param>
            <param name="AI6"></param>
            <param name="AI7"></param>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
    </members>
</doc>
